{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The purpose of Lamassu CA is to provide a wrapper API to manage\nCAs registered in Lamassu PKI.",
    "title": "Lamassu CA.",
    "license": {
      "name": "MPL-2.0",
      "url": "https://opensource.org/licenses/MPL-2.0"
    },
    "version": "0.0.1"
  },
  "basePath": "/v1",
  "paths": {
    "/cas/{ca}": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "lamassu-ca"
        ],
        "summary": "Create CA swagger",
        "operationId": "createCA",
	"parameters": [
		{
			"description": "Create CA parameters",
			"name": "Create CA",
			"in": "body",
			"required": true,
			"schema": {
				"$ref": "#/definitions/CreateCARequest"
				}
		},
		{
			"description": "JWT Toker usar Bearer {token}",
			"name": "Authorization",
			"in": "header",
			"type":"apiKey"
		},
		{
			"description": "CA Name",
			"name": "ca",
			"in": "path",
			"required": true,
			"type":"string"
		}
	],
			        
        "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
        }
      },
      "delete": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "lamassu-ca"
        ],
        "summary": "Deletes or revokes CA from Vault.",
        "operationId": "deleteCA",
	"parameters": [
		{
			"description": "JWT Toker usar Bearer {token}",
			"name": "Authorization",
			"in": "header",
			"type":"apiKey"
		},
		{
			"description": "CA Name",
			"name": "ca",
			"in": "path",
			"required": true,
			"type":"string"
		}
	],
        "responses": {
          "200": {
            "$ref": "#/responses/deleteCAResponse"
          },
          "500": {
            "description": ""
          },
          "default": {
            "$ref": "#/responses/deleteCAResponse"
          }
        }
      }
    },
    "/cas/ops": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "lamassu-ca"
        ],
        "summary": "Gets detailed CA information from Vault.",
        "operationId": "getCAInfo",
	"parameters": [
		{
			"description": "JWT Toker usar Bearer {token}",
			"name": "Authorization",
			"in": "header",
			"type":"apiKey"
		}
	],
	
        "responses": {
          "200": {
            "$ref": "#/responses/getCAInfoResponse"
          },
          "400": {
            "description": ""
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/cas/import/{ca}":{
    	"post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "lamassu-ca"
        ],
        "summary": "Import CA",
        "operationId": "importCA",
	"parameters": [
		{
			"description": "Import CA parameters",
			"name": "Import CA",
			"in": "body",
			"required": true,
			"schema": {
				"$ref": "#/definitions/ImportCARequest"
				}
		},
		{
			"description": "JWT Toker usar Bearer {token}",
			"name": "Authorization",
			"in": "header",
			"type":"apiKey"
		},
		{
			"description": "CA Name",
			"name": "ca",
			"in": "path",
			"required": true,
			"type":"string"
		}
	],
			        
        "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
        }
      }
      },
      "/cas/issued/{caType}":{
      	"get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "lamassu-ca"
        ],
        "summary": "Get issued certs",
        "operationId": "Getsissuedcerts",
	"parameters": [
		{
			"description": "JWT Toker usar Bearer {token}",
			"name": "Authorization",
			"in": "header",
			"type":"apiKey"
		},
		{
			"description": "CA Type: all, system or ops",
			"name": "caType",
			"in": "path",
			"required": true,
			"type":"string"
		}
		
	],
        "responses": {
          "200": {
                  "description": "OK",
                   "schema": {
                         "type": "object"
                        }
          }
        }
      }
    },
    "/cas/{ca}/cert/{serialNumber}":{
    	"delete":{
    	"produces":[
    		"application/json"
    	],
    	"tags":[
    		"lamassu-ca"
    	],
    	"summary":"Delete certificate",
    	"operationId":"Deletecert",
	"parameters": [
		{
			"description": "CA Name",
			"name": "ca",
			"in": "path",
			"required": true,
			"type":"string"
		},
		{
			"description": "Serial Number",
			"name": "serialNumber",
			"in": "path",
			"required": true,
			"type":"string"
		},
		{
			"description": "JWT Toker usar Bearer {token}",
			"name": "Authorization",
			"in": "header",
			"type":"apiKey"
		}
	],
        "responses": {
          "200": {
                  "description": "OK",
                   "schema": {
                         "type": "object"
                        }
          }
     }
  }
  },
    "/health": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Service Status"
        ],
        "summary": "Gets service health.",
        "operationId": "health",
        "responses": {
          "200": {
            "$ref": "#/definitions/HealthResponse"

        }
      }
    }
 }	
  
  	     	
         			
          		
  },
  			
  "definitions": {
    "HealthResponse": {
      "type": "object",
      "properties": {
        "healthy": {
          "type": "boolean",
          "x-go-name": "Healthy"
        }
      },
      "x-go-package": "github.com/lamassuiot/lamassu-ca/pkg/api"
    },
  		
  			
    "CA": {
      "description": "The parameters for importing a CA",
      "type": "object",
      "required": [
        "ca_name"
      ],
      "properties": {
        "ca_name": {
          "description": "The name of the CA",
          "type": "string",
          "x-go-name": "Name",
          "example": "Lamassu-Root-CA1-RSA4096"
        }
      },
      "x-go-package": "github.com/lamassuiot/lamassu-ca/pkg/secrets"
    },
    "DeleteCertRequest":{
    	"description":"Delete cert request parameters",
    	"type":"object",
    	"required":[
    		"ca_name",
    		"common_name",
    		"serialnumber"
    	],
    	"properties":{
    		"ca_name":{
    			"description": "The name of the CA",
          		"type": "string",
          		"x-go-name": "CaName",
          		"example": "Lamassu-Root-CA1-RSA4096"
          	},
        	"serialnumber": {
          		"description": "The serial number of the CA",
          		"type": "string",
          		"x-go-name": "SerialNumber",
          		"example": "7e:36:13:a5:31:9f:4a:76:10:64:2e:9b:0a:11:07:b7:e6:3e:cf:94"
        	}
        },
        "x-go-package": "github.com/lamassuiot/lamassu-ca/pkg/secrets"
       },         	
          		
    "ImportCARequest": {
      "description": "Import CA",
      "type": "object",
      "required": [
        "ca_name",
        "pembundle",
        "ttl"
      ],
      "properties": {
        "ca_name": {
          "description": "The name of the CA",
          "type": "string",
          "x-go-name": "CAName",
          "example": "Lamassu-Root-CA1-RSA4096"
        },
        "pembundle": {
          "description": "Certificate file",
          "type": "string",
          "x-go-name": "PEMBundle"
        },
        "ttl": {
          "description": "Time to live",
          "type": "int",
          "x-go-name": "TTL",
          "example": "8760"
        },
      },
      "x-go-package": "github.com/lamassuiot/lamassu-ca/pkg/secrets"
    },
   
    "CAInfo": {
      "description": "CAInfo represents the detailed information about a CA",
      "type": "object",
      "required": [
        "cn",
        "key_type",
        "key_bits",
        "o",
        "c",
        "st",
        "l",
        "cattl",
        "ou",
        "KeyStrength",
        "serialnumber",
        "status"
      ],
      "properties": {
        "c": {
          "description": "Country Name of the CA certificate",
          "type": "string",
          "x-go-name": "C",
          "example": "ES"
        },
        "cn": {
          "description": "Common name of the CA certificate",
          "type": "string",
          "x-go-name": "CN",
          "example": "Lamassu-Root-CA1-RSA4096"
        },
        "key_bits": {
          "description": "Length used to create CA key",
          "type": "integer",
          "format": "int64",
          "x-go-name": "KeyBits",
          "example": 4096
        },
        "key_type": {
          "description": "Algorithm used to create CA key",
          "type": "string",
          "x-go-name": "KeyType",
          "example": "RSA"
        },
        "l": {
          "description": "Locality of the CA certificate",
          "type": "string",
          "x-go-name": "L",
          "example": "Arrasate"
        },
        "o": {
          "description": "Organization of the CA certificate",
          "type": "string",
          "x-go-name": "O",
          "example": "Lamassu IoT"
        },
        "st": {
          "description": "State of the CA certificate",
          "type": "string",
          "x-go-name": "ST",
          "example": "Guipuzcoa"
        },
        "status": {
          "description": "The status of the CA",
          "type": "string",
          "x-go-name": "Status",
          "example": "issued | expired"
        },
        "serialnumber": {
          "description": "The serial number of the CA",
          "type": "string",
          "x-go-name": "SerialNumber",
          "example": "7e:36:13:a5:31:9f:4a:76:10:64:2e:9b:0a:11:07:b7:e6:3e:cf:94"
        },
        "keystrength": {
          "description": "Strength of the key used to the create CA",
          "type": "string",
          "x-go-name": "KeyStrength",
          "example": "low"
        },
        "ou": {
          "description": "Organization Unit of the CA certificate",
          "type": "string",
          "x-go-name": "OU",
          "example": " Lamassu IoT department 1"
        },   
       "cattl": {
          "description": "Expiration period of the new emmited CA",
          "type": "string",
          "x-go-name": "CaTTL",
          "example": "262800h"
        },              
      },
      "x-go-package": "github.com/lamassuiot/lamassu-ca/pkg/secrets"
    },
    "GetCAInfoResponse": {
      "type": "object",
      "properties": {
        "CAInfo": {
          "$ref": "#/definitions/CAInfo"
        }
      },
      "x-go-package": "github.com/lamassuiot/lamassu-ca/pkg/api"
    },
    "CreateCARequest": {
      "type": "object",
      "properties": {
        "CAInfo": {
          "$ref": "#/definitions/CAInfo"
        }
      },
      "x-go-package": "github.com/lamassuiot/lamassu-ca/pkg/api"
    },
    "GetCAsResponse": {
      "type": "object",
      "properties": {
        "CAs": {
          "$ref": "#/definitions/CA"
        }
      },
      "x-go-package": "github.com/lamassuiot/lamassu-ca/pkg/api"
    },
    "CaRequest": {
    	"description":"Get issued Cert",
    	"type":"object",
    	"required":[
    		"catype"
    	],
    	"properties":{
    		"catype":{
    			"description": "The name of the CA Type",
          		"type": "string",
          		"x-go-name": "caType",
          		"example": "SYSTEM_CAS | OPERATIONS_CAS | ALL_CAS"
          	}
        },
        "x-go-package": "github.com/lamassuiot/lamassu-ca/pkg/secrets"
       }
  },
  "responses": {
    "getCAInfoResponse": {
      "description": "A GetCAInfoResponse returns detailed information about a CA",
      "schema": {
        "$ref": "#/definitions/GetCAInfoResponse"
      }
    },
    "getCAsResponse": {
      "description": "A GetCAsResponse returns a list of CAs",
      "schema": {
        "$ref": "#/definitions/GetCAsResponse"
      }
    }
  },
  "request": {
  	"CreateCA": {
  		"description": "A Create CA based on parameters",
  		"schema" :{
  			"$ref": "#/definitions/CreateCARequest"
  		}
  	}
  }
}
